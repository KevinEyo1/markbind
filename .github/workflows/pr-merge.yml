name: PR Merge
on:
    pull_request:
        types:
          - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
    check-pr-label:
        if: ${{ github.event.pull_request.merged == true }}
        runs-on: ubuntu-latest
        
        steps:
          - uses: actions/checkout@v3
          - name: Check for PR description label
            id: check_pr_description_label
            run: |
              python scripts/process_message.py "${TEXT_BODY}" > processed_body.txt
              processed_body=$(cat processed_body.txt)
              proposed_version_impact=$(echo "$processed_body" | awk '/Major \\\(when you make incompatible API changes\\\)/,/Patch \\\(when you make backward compatible bug fixes\\\)/')
              is_major=$(echo "$proposed_version_impact" | grep -qi '\[X\] Major'; echo $?)
              is_minor=$(echo "$proposed_version_impact" | grep -qi '\[X\] Minor'; echo $?)
              is_patch=$(echo "$proposed_version_impact" | grep -qi '\[X\] Patch'; echo $?)
              sum=$(($is_major + $is_minor + $is_patch))
              if [[ "$sum" -eq 3 ]]; then
                echo "Please remember to tick a SEMVER impact for this PR in the PR body description."
                exit 1
              elif [[ "$sum" -le 1 ]]; then
                echo "Please select only one SEMVER impact for this PR in the PR body description."
                exit 1
              else
                echo "chosen_label=$(
                    if [ "$is_major" -eq 0 ]; then
                        echo "r.Major"
                    elif [ "$is_minor" -eq 0 ]; then
                        echo "r.Minor"
                    elif [ "$is_patch" -eq 0 ]; then
                        echo "r.Patch"
                    fi
                 )" >> $GITHUB_OUTPUT
              fi

            env:
              TEXT_BODY: ${{ github.event.pull_request.body }}
                
          - name: Assign label based on version impact
            uses: actions/github-script@v7
            with:
                script: |
                    github.rest.issues.addLabels({
                        issue_number: context.payload.pull_request.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        labels: [${{env.CHOSEN_LABEL}}]
                    })
            env:
                CHOSEN_LABEL: ${{ steps.check_pr_description_label.outputs.chosen_label }}


    